plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group 'ru.pyrinoff.somebotexamples'
version '1.0-SNAPSHOT'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

ext {
    activatedExample = 'example1'
    uploadJarDirectory = "upload/opt/docker/javaservice/bot"
    distrDirectory = "build/distributions"
    artifactName = "${project.archivesBaseName}-boot-${project.version}"
    theMainClass = "${group}.${activatedExample}.Main" //e.g. ru.pyrinoff.somebot.examples.example1.Main
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

application { mainClassName = "${theMainClass}" }
jar { manifest { attributes("Main-Class": "${theMainClass}") } } ////https://www.baeldung.com/gradle-run-java-main

dependencies {
    implementation(
            'com.github.pyrinoff:somebot:0.2.4',
            'org.springframework.boot:spring-boot-starter-data-jpa:3.1.0',
            'org.telegram:telegrambots:6.7.0',
            'com.github.pyrinoff:vk-java-sdk:7fdcb839e4', //'com.vk.api:sdk:1.0.14'
            'org.jetbrains:annotations:24.0.1',
            'org.slf4j:slf4j-simple:2.0.5',
    )
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testImplementation(
            'org.slf4j:slf4j-simple:2.0.5',
            'org.junit.jupiter:junit-jupiter-api:5.9.2'
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}

//после формирование boot zip - копируем в upload
task copyBuildToUploadDirectory {
    doLast {
        delete fileTree(dir: uploadJarDirectory).exclude { it.file.isDirectory() }
        ant.unzip(src: "${distrDirectory}/${artifactName}.zip", dest: distrDirectory)
        copy {
            from "${distrDirectory}/${artifactName}"
            into uploadJarDirectory
        }
        delete "${distrDirectory}/${artifactName}/"
    }
}
bootDistZip.finalizedBy copyBuildToUploadDirectory